{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nimport React, { useMemo, useRef, useState } from 'react';\nimport useUpdate from '../_util/hooks/useUpdate';\nimport throttleByRaf from '../_util/throttleByRaf';\nimport { isNumber, isString } from '../_util/is';\nimport useIsomorphicLayoutEffect from '../_util/hooks/useIsomorphicLayoutEffect';\nimport useCssEllipsis from './useCssEllipsis';\n// line-height baseline\nvar MEASURE_LINE_HEIGHT_TEXT = 'hxj';\nexport var MEASURE_STATUS;\n(function (MEASURE_STATUS) {\n  MEASURE_STATUS[MEASURE_STATUS[\"INIT\"] = 0] = \"INIT\";\n  MEASURE_STATUS[MEASURE_STATUS[\"BEFORE_MEASURE\"] = 1] = \"BEFORE_MEASURE\";\n  MEASURE_STATUS[MEASURE_STATUS[\"MEASURING\"] = 2] = \"MEASURING\";\n  MEASURE_STATUS[MEASURE_STATUS[\"MEASURE_END\"] = 3] = \"MEASURE_END\";\n  MEASURE_STATUS[MEASURE_STATUS[\"NO_NEED_ELLIPSIS\"] = 4] = \"NO_NEED_ELLIPSIS\";\n})(MEASURE_STATUS || (MEASURE_STATUS = {}));\nfunction useEllipsis(props) {\n  var children = props.children,\n    _a = props.rows,\n    rows = _a === void 0 ? 1 : _a,\n    width = props.width,\n    expanding = props.expanding,\n    renderMeasureContent = props.renderMeasureContent,\n    simpleEllipsis = props.simpleEllipsis,\n    onEllipsis = props.onEllipsis,\n    suffix = props.suffix,\n    expandNodes = props.expandNodes,\n    expandable = props.expandable,\n    ellipsisStr = props.ellipsisStr;\n  var singleRowNode = useRef();\n  var mirrorNode = useRef();\n  var _b = __read(useState([0, 0, 0]), 2),\n    binarySearchIndex = _b[0],\n    setBinarySearchIndex = _b[1];\n  var _c = __read(useState(0), 2),\n    lineHeight = _c[0],\n    setLineHeight = _c[1];\n  var _d = __read(useState(MEASURE_STATUS.NO_NEED_ELLIPSIS), 2),\n    status = _d[0],\n    setStatus = _d[1];\n  var _e = __read(binarySearchIndex, 3),\n    startLoc = _e[0],\n    midLoc = _e[1],\n    endLoc = _e[2];\n  var _f = __read(useState(false), 2),\n    isEllipsis = _f[0],\n    setIsEllipsis = _f[1];\n  var nodeList = useMemo(function () {\n    return React.Children.toArray(children);\n  }, [children]);\n  var closedLoc = useRef(0);\n  var ellipsisStyle = useCssEllipsis({\n    rows: rows,\n    cssEllipsis: true\n  }).ellipsisStyle;\n  useUpdate(function () {\n    onEllipsis && onEllipsis(isEllipsis);\n  }, [isEllipsis]);\n  var isSimpleNode = function (node) {\n    return isString(node) || isNumber(node);\n  };\n  var getTotalLen = function (list) {\n    var total = 0;\n    list.forEach(function (node) {\n      if (isSimpleNode) {\n        total += String(node).length;\n      } else {\n        total += 1;\n      }\n    });\n    return total;\n  };\n  var totalLen = useMemo(function () {\n    return getTotalLen(nodeList);\n  }, [nodeList]);\n  var updateSearchIndex = throttleByRaf(function (searchIndex) {\n    return setBinarySearchIndex(searchIndex);\n  });\n  var getSlicedNode = function (sliceLen) {\n    var slicedNode = [];\n    var currentLen = 0;\n    if (sliceLen >= totalLen) {\n      return nodeList;\n    }\n    for (var index in nodeList) {\n      var node = nodeList[index];\n      if (currentLen >= sliceLen) {\n        return slicedNode;\n      }\n      var currentNodeLen = isSimpleNode(node) ? String(node).length : 1;\n      if (currentNodeLen > sliceLen - currentLen) {\n        slicedNode.push(String(node).slice(0, sliceLen - currentLen));\n        currentLen = sliceLen;\n        return slicedNode;\n      }\n      currentLen += currentNodeLen;\n      slicedNode.push(node);\n    }\n    return slicedNode;\n  };\n  var measure = function () {\n    var _a, _b;\n    if (lineHeight) {\n      if (status === MEASURE_STATUS.INIT) {\n        var maxHeight = rows * lineHeight;\n        var mirrorHeight = (_a = mirrorNode.current) === null || _a === void 0 ? void 0 : _a.offsetHeight;\n        var currentEllipsis = mirrorHeight > maxHeight;\n        // simpleEllipsis 和 expanding 情况下: 只用判断空间是否足够，不用计算折叠零界\n        if (!currentEllipsis || simpleEllipsis || expanding) {\n          setStatus(MEASURE_STATUS.MEASURE_END);\n          setIsEllipsis(currentEllipsis);\n          setBinarySearchIndex([0, totalLen, totalLen]);\n        } else {\n          setIsEllipsis(true);\n          setStatus(MEASURE_STATUS.BEFORE_MEASURE);\n        }\n      } else if (status === MEASURE_STATUS.BEFORE_MEASURE) {\n        var totalWidth = singleRowNode === null || singleRowNode === void 0 ? void 0 : singleRowNode.current.offsetWidth;\n        var closedWidth = rows * width;\n        if (totalWidth > rows * width) {\n          var startRatio = Math.max(closedWidth / totalWidth - 0.1, 0);\n          var endRatio = Math.min(closedWidth / totalWidth + 0.1, 1);\n          var closedStartLoc = Math.floor(startRatio * totalLen);\n          var closedEndLoc = Math.ceil(endRatio * totalLen);\n          var closedMiddleLoc = Math.floor((closedStartLoc + closedEndLoc) / 2);\n          closedLoc.current = closedMiddleLoc;\n        }\n        setStatus(MEASURE_STATUS.MEASURING);\n      } else if (status === MEASURE_STATUS.MEASURING) {\n        if (startLoc !== endLoc - 1) {\n          var mirrorHeight = (_b = mirrorNode.current) === null || _b === void 0 ? void 0 : _b.offsetHeight;\n          var maxHeight = rows * lineHeight;\n          var nextStartLoc = startLoc;\n          var nextEndLoc = endLoc;\n          if (mirrorHeight <= maxHeight) {\n            nextStartLoc = midLoc;\n          } else {\n            nextEndLoc = midLoc;\n          }\n          var nextMidLoc = Math.floor((nextEndLoc + nextStartLoc) / 2);\n          updateSearchIndex([nextStartLoc, nextMidLoc, nextEndLoc]);\n        } else {\n          updateSearchIndex([startLoc, startLoc, startLoc]);\n          setStatus(MEASURE_STATUS.MEASURE_END);\n        }\n      }\n    }\n  };\n  useIsomorphicLayoutEffect(function () {\n    if (props.rows && width) {\n      setBinarySearchIndex([0, Math.floor(totalLen / 2), totalLen]);\n      setStatus(MEASURE_STATUS.INIT);\n    } else {\n      setStatus(MEASURE_STATUS.NO_NEED_ELLIPSIS);\n    }\n  }, [totalLen, simpleEllipsis, expanding, width, suffix, expandNodes, expandable, ellipsisStr, props.rows]);\n  useIsomorphicLayoutEffect(function () {\n    if (singleRowNode.current && status === MEASURE_STATUS.INIT) {\n      var offsetHeight = singleRowNode.current.offsetHeight;\n      setLineHeight(offsetHeight);\n    }\n  }, [status]);\n  useIsomorphicLayoutEffect(function () {\n    measure();\n  }, [status, midLoc, startLoc, endLoc, lineHeight]);\n  var basicStyle = {\n    zIndex: -999,\n    position: 'fixed',\n    opacity: 0,\n    padding: 0,\n    margin: 0\n  };\n  var singleRowNodeStyle = __assign({\n    whiteSpace: 'nowrap'\n  }, basicStyle);\n  // 用css省略的话，需要覆盖单行省略样式\n  var mirrorNodeStyle = simpleEllipsis ? __assign({\n    textOverflow: 'clip'\n  }, basicStyle) : basicStyle;\n  var ellipsisNode;\n  if (status === MEASURE_STATUS.INIT || status === MEASURE_STATUS.BEFORE_MEASURE) {\n    ellipsisNode = React.createElement(\"div\", null, React.createElement(\"div\", {\n      ref: singleRowNode,\n      style: singleRowNodeStyle\n    }, status === MEASURE_STATUS.INIT ? MEASURE_LINE_HEIGHT_TEXT : renderMeasureContent(children, false)), React.createElement(\"div\", {\n      ref: mirrorNode,\n      style: __assign({\n        width: width\n      }, mirrorNodeStyle)\n    }, renderMeasureContent(children, isEllipsis)));\n    ellipsisNode = ellipsisNode.props.children;\n  } else if (status === MEASURE_STATUS.MEASURING) {\n    // 计算过程中的展示，不抖动\n    var showStyle = __assign({\n      height: lineHeight * rows,\n      width: width\n    }, ellipsisStyle);\n    ellipsisNode = React.createElement(\"div\", null, React.createElement(\"div\", {\n      ref: mirrorNode,\n      style: __assign({\n        width: width\n      }, mirrorNodeStyle)\n    }, renderMeasureContent(getSlicedNode(midLoc), isEllipsis)), React.createElement(\"div\", {\n      style: showStyle\n    }, getSlicedNode(closedLoc.current)));\n    ellipsisNode = ellipsisNode.props.children;\n  } else if (status === MEASURE_STATUS.MEASURE_END) {\n    ellipsisNode = renderMeasureContent(getSlicedNode(midLoc), isEllipsis);\n  } else if (status === MEASURE_STATUS.NO_NEED_ELLIPSIS) {\n    ellipsisNode = renderMeasureContent(children, false);\n  }\n  return {\n    ellipsisNode: ellipsisNode,\n    isEllipsis: isEllipsis,\n    measureStatus: status\n  };\n}\nexport default useEllipsis;","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__read","o","m","Symbol","iterator","r","ar","e","next","done","push","value","error","React","useMemo","useRef","useState","useUpdate","throttleByRaf","isNumber","isString","useIsomorphicLayoutEffect","useCssEllipsis","MEASURE_LINE_HEIGHT_TEXT","MEASURE_STATUS","useEllipsis","props","children","_a","rows","width","expanding","renderMeasureContent","simpleEllipsis","onEllipsis","suffix","expandNodes","expandable","ellipsisStr","singleRowNode","mirrorNode","_b","binarySearchIndex","setBinarySearchIndex","_c","lineHeight","setLineHeight","_d","NO_NEED_ELLIPSIS","status","setStatus","_e","startLoc","midLoc","endLoc","_f","isEllipsis","setIsEllipsis","nodeList","Children","toArray","closedLoc","ellipsisStyle","cssEllipsis","isSimpleNode","node","getTotalLen","list","total","forEach","String","totalLen","updateSearchIndex","searchIndex","getSlicedNode","sliceLen","slicedNode","currentLen","index","currentNodeLen","slice","measure","INIT","maxHeight","mirrorHeight","current","offsetHeight","currentEllipsis","MEASURE_END","BEFORE_MEASURE","totalWidth","offsetWidth","closedWidth","startRatio","Math","max","endRatio","min","closedStartLoc","floor","closedEndLoc","ceil","closedMiddleLoc","MEASURING","nextStartLoc","nextEndLoc","nextMidLoc","basicStyle","zIndex","position","opacity","padding","margin","singleRowNodeStyle","whiteSpace","mirrorNodeStyle","textOverflow","ellipsisNode","createElement","ref","style","showStyle","height","measureStatus"],"sources":["/Users/acetyl/Desktop/CS411/CS411/prototype/frontend/node_modules/@arco-design/web-react/es/Typography/useEllipsis.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nimport React, { useMemo, useRef, useState } from 'react';\nimport useUpdate from '../_util/hooks/useUpdate';\nimport throttleByRaf from '../_util/throttleByRaf';\nimport { isNumber, isString } from '../_util/is';\nimport useIsomorphicLayoutEffect from '../_util/hooks/useIsomorphicLayoutEffect';\nimport useCssEllipsis from './useCssEllipsis';\n// line-height baseline\nvar MEASURE_LINE_HEIGHT_TEXT = 'hxj';\nexport var MEASURE_STATUS;\n(function (MEASURE_STATUS) {\n    MEASURE_STATUS[MEASURE_STATUS[\"INIT\"] = 0] = \"INIT\";\n    MEASURE_STATUS[MEASURE_STATUS[\"BEFORE_MEASURE\"] = 1] = \"BEFORE_MEASURE\";\n    MEASURE_STATUS[MEASURE_STATUS[\"MEASURING\"] = 2] = \"MEASURING\";\n    MEASURE_STATUS[MEASURE_STATUS[\"MEASURE_END\"] = 3] = \"MEASURE_END\";\n    MEASURE_STATUS[MEASURE_STATUS[\"NO_NEED_ELLIPSIS\"] = 4] = \"NO_NEED_ELLIPSIS\";\n})(MEASURE_STATUS || (MEASURE_STATUS = {}));\nfunction useEllipsis(props) {\n    var children = props.children, _a = props.rows, rows = _a === void 0 ? 1 : _a, width = props.width, expanding = props.expanding, renderMeasureContent = props.renderMeasureContent, simpleEllipsis = props.simpleEllipsis, onEllipsis = props.onEllipsis, suffix = props.suffix, expandNodes = props.expandNodes, expandable = props.expandable, ellipsisStr = props.ellipsisStr;\n    var singleRowNode = useRef();\n    var mirrorNode = useRef();\n    var _b = __read(useState([0, 0, 0]), 2), binarySearchIndex = _b[0], setBinarySearchIndex = _b[1];\n    var _c = __read(useState(0), 2), lineHeight = _c[0], setLineHeight = _c[1];\n    var _d = __read(useState(MEASURE_STATUS.NO_NEED_ELLIPSIS), 2), status = _d[0], setStatus = _d[1];\n    var _e = __read(binarySearchIndex, 3), startLoc = _e[0], midLoc = _e[1], endLoc = _e[2];\n    var _f = __read(useState(false), 2), isEllipsis = _f[0], setIsEllipsis = _f[1];\n    var nodeList = useMemo(function () { return React.Children.toArray(children); }, [children]);\n    var closedLoc = useRef(0);\n    var ellipsisStyle = useCssEllipsis({ rows: rows, cssEllipsis: true }).ellipsisStyle;\n    useUpdate(function () {\n        onEllipsis && onEllipsis(isEllipsis);\n    }, [isEllipsis]);\n    var isSimpleNode = function (node) {\n        return isString(node) || isNumber(node);\n    };\n    var getTotalLen = function (list) {\n        var total = 0;\n        list.forEach(function (node) {\n            if (isSimpleNode) {\n                total += String(node).length;\n            }\n            else {\n                total += 1;\n            }\n        });\n        return total;\n    };\n    var totalLen = useMemo(function () { return getTotalLen(nodeList); }, [nodeList]);\n    var updateSearchIndex = throttleByRaf(function (searchIndex) { return setBinarySearchIndex(searchIndex); });\n    var getSlicedNode = function (sliceLen) {\n        var slicedNode = [];\n        var currentLen = 0;\n        if (sliceLen >= totalLen) {\n            return nodeList;\n        }\n        for (var index in nodeList) {\n            var node = nodeList[index];\n            if (currentLen >= sliceLen) {\n                return slicedNode;\n            }\n            var currentNodeLen = isSimpleNode(node) ? String(node).length : 1;\n            if (currentNodeLen > sliceLen - currentLen) {\n                slicedNode.push(String(node).slice(0, sliceLen - currentLen));\n                currentLen = sliceLen;\n                return slicedNode;\n            }\n            currentLen += currentNodeLen;\n            slicedNode.push(node);\n        }\n        return slicedNode;\n    };\n    var measure = function () {\n        var _a, _b;\n        if (lineHeight) {\n            if (status === MEASURE_STATUS.INIT) {\n                var maxHeight = rows * lineHeight;\n                var mirrorHeight = (_a = mirrorNode.current) === null || _a === void 0 ? void 0 : _a.offsetHeight;\n                var currentEllipsis = mirrorHeight > maxHeight;\n                // simpleEllipsis 和 expanding 情况下: 只用判断空间是否足够，不用计算折叠零界\n                if (!currentEllipsis || simpleEllipsis || expanding) {\n                    setStatus(MEASURE_STATUS.MEASURE_END);\n                    setIsEllipsis(currentEllipsis);\n                    setBinarySearchIndex([0, totalLen, totalLen]);\n                }\n                else {\n                    setIsEllipsis(true);\n                    setStatus(MEASURE_STATUS.BEFORE_MEASURE);\n                }\n            }\n            else if (status === MEASURE_STATUS.BEFORE_MEASURE) {\n                var totalWidth = singleRowNode === null || singleRowNode === void 0 ? void 0 : singleRowNode.current.offsetWidth;\n                var closedWidth = rows * width;\n                if (totalWidth > rows * width) {\n                    var startRatio = Math.max(closedWidth / totalWidth - 0.1, 0);\n                    var endRatio = Math.min(closedWidth / totalWidth + 0.1, 1);\n                    var closedStartLoc = Math.floor(startRatio * totalLen);\n                    var closedEndLoc = Math.ceil(endRatio * totalLen);\n                    var closedMiddleLoc = Math.floor((closedStartLoc + closedEndLoc) / 2);\n                    closedLoc.current = closedMiddleLoc;\n                }\n                setStatus(MEASURE_STATUS.MEASURING);\n            }\n            else if (status === MEASURE_STATUS.MEASURING) {\n                if (startLoc !== endLoc - 1) {\n                    var mirrorHeight = (_b = mirrorNode.current) === null || _b === void 0 ? void 0 : _b.offsetHeight;\n                    var maxHeight = rows * lineHeight;\n                    var nextStartLoc = startLoc;\n                    var nextEndLoc = endLoc;\n                    if (mirrorHeight <= maxHeight) {\n                        nextStartLoc = midLoc;\n                    }\n                    else {\n                        nextEndLoc = midLoc;\n                    }\n                    var nextMidLoc = Math.floor((nextEndLoc + nextStartLoc) / 2);\n                    updateSearchIndex([nextStartLoc, nextMidLoc, nextEndLoc]);\n                }\n                else {\n                    updateSearchIndex([startLoc, startLoc, startLoc]);\n                    setStatus(MEASURE_STATUS.MEASURE_END);\n                }\n            }\n        }\n    };\n    useIsomorphicLayoutEffect(function () {\n        if (props.rows && width) {\n            setBinarySearchIndex([0, Math.floor(totalLen / 2), totalLen]);\n            setStatus(MEASURE_STATUS.INIT);\n        }\n        else {\n            setStatus(MEASURE_STATUS.NO_NEED_ELLIPSIS);\n        }\n    }, [\n        totalLen,\n        simpleEllipsis,\n        expanding,\n        width,\n        suffix,\n        expandNodes,\n        expandable,\n        ellipsisStr,\n        props.rows,\n    ]);\n    useIsomorphicLayoutEffect(function () {\n        if (singleRowNode.current && status === MEASURE_STATUS.INIT) {\n            var offsetHeight = singleRowNode.current.offsetHeight;\n            setLineHeight(offsetHeight);\n        }\n    }, [status]);\n    useIsomorphicLayoutEffect(function () {\n        measure();\n    }, [status, midLoc, startLoc, endLoc, lineHeight]);\n    var basicStyle = {\n        zIndex: -999,\n        position: 'fixed',\n        opacity: 0,\n        padding: 0,\n        margin: 0,\n    };\n    var singleRowNodeStyle = __assign({ whiteSpace: 'nowrap' }, basicStyle);\n    // 用css省略的话，需要覆盖单行省略样式\n    var mirrorNodeStyle = simpleEllipsis\n        ? __assign({ textOverflow: 'clip' }, basicStyle) : basicStyle;\n    var ellipsisNode;\n    if (status === MEASURE_STATUS.INIT || status === MEASURE_STATUS.BEFORE_MEASURE) {\n        ellipsisNode = (React.createElement(\"div\", null,\n            React.createElement(\"div\", { ref: singleRowNode, style: singleRowNodeStyle }, status === MEASURE_STATUS.INIT\n                ? MEASURE_LINE_HEIGHT_TEXT\n                : renderMeasureContent(children, false)),\n            React.createElement(\"div\", { ref: mirrorNode, style: __assign({ width: width }, mirrorNodeStyle) }, renderMeasureContent(children, isEllipsis))));\n        ellipsisNode = ellipsisNode.props.children;\n    }\n    else if (status === MEASURE_STATUS.MEASURING) {\n        // 计算过程中的展示，不抖动\n        var showStyle = __assign({ height: lineHeight * rows, width: width }, ellipsisStyle);\n        ellipsisNode = (React.createElement(\"div\", null,\n            React.createElement(\"div\", { ref: mirrorNode, style: __assign({ width: width }, mirrorNodeStyle) }, renderMeasureContent(getSlicedNode(midLoc), isEllipsis)),\n            React.createElement(\"div\", { style: showStyle }, getSlicedNode(closedLoc.current))));\n        ellipsisNode = ellipsisNode.props.children;\n    }\n    else if (status === MEASURE_STATUS.MEASURE_END) {\n        ellipsisNode = renderMeasureContent(getSlicedNode(midLoc), isEllipsis);\n    }\n    else if (status === MEASURE_STATUS.NO_NEED_ELLIPSIS) {\n        ellipsisNode = renderMeasureContent(children, false);\n    }\n    return { ellipsisNode: ellipsisNode, isEllipsis: isEllipsis, measureStatus: status };\n}\nexport default useEllipsis;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}